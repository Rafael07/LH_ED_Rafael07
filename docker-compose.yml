services:
  # Banco de dados Northwind (docker-compose original)
  source_db:
    image: postgres:12
    restart: always
    environment:
        POSTGRES_DB: northwind
        POSTGRES_USER: northwind_user
        POSTGRES_PASSWORD: thewindisblowing
    volumes:
      - ./data/origin/northwind.sql:/docker-entrypoint-initdb.d/northwind.sql
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U northwind_user -d northwind"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Banco de dados destino 
  target_db:
    image: postgres:12
    environment:
      POSTGRES_DB: northwind_target
      POSTGRES_USER: target_user
      POSTGRES_PASSWORD: thewindkeepsblowing
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U target_user -d northwind_target"]
      interval: 10s
      timeout: 5s
      retries: 5

  meltano:
      image: meltano/meltano:latest
      volumes:
        - ./:/project
        - ./data:/data
      environment:
        - MELTANO_PROJECT_ROOT=/project
      ports:
        - "5000:5000"

  # Airflow - Interface web
  airflow-webserver:
    image: apache/airflow:2.7.1
    depends_on:
      airflow-db:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor 
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./data:/data
    ports:
      - 8080:8080
    command: webserver
    restart: always

  # Airflow - Monitora e executa as DAGs de acordo com a programação
  airflow-scheduler:
    image: apache/airflow:2.7.1
    depends_on:
      airflow-db:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor 
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./data:/data
    command: scheduler
    restart: always
    
  # Airflow - banco de dados
  airflow-db:
    image: postgres:12
    environment:
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  # Airflow - Serviço de inicialização
  airflow-init:
    image: apache/airflow:2.7.1
    depends_on:
      airflow-db:
        condition: service_healthy
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - _AIRFLOW_DB_UPGRADE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=airflow
      - _AIRFLOW_WWW_USER_PASSWORD=airflow
    command: version